import React from "react";
import React from 'react';\nimport { View, Text, StyleSheet, Image } from 'react-native';\nimport { UserBadge, AvatarBorder, UserType } from '@/types/user';\n\ninterface UserBadgeDisplayProps {\n  badge?: UserBadge;\n  size?: 'small' | 'medium' | 'large';\n  showText?: boolean;\n}\n\nexport const UserBadgeDisplay: React.FC<UserBadgeDisplayProps> = ({ \n  badge, \n  size = 'medium', \n  showText = false \n}) => {\n  if (!badge) return null;\n\n  const sizeStyles = {\n    small: { fontSize: 12, padding: 2 },\n    medium: { fontSize: 14, padding: 4 },\n    large: { fontSize: 16, padding: 6 }\n  };\n\n  return (\n    <View style={[styles.badgeContainer, { backgroundColor: badge.color + '20' }]}>\n      <Text style={[styles.badgeIcon, sizeStyles[size]]}>{badge.icon}</Text>\n      {showText && (\n        <Text style={[styles.badgeText, { color: badge.color }, sizeStyles[size]]}>\n          {badge.name}\n        </Text>\n      )}\n    </View>\n  );\n};\n\ninterface AvatarWithBorderProps {\n  imageUri?: string;\n  border?: AvatarBorder;\n  size?: number;\n  userType?: UserType;\n}\n\nexport const AvatarWithBorder: React.FC<AvatarWithBorderProps> = ({ \n  imageUri, \n  border, \n  size = 50,\n  userType = 'normal'\n}) => {\n  const borderWidth = size * 0.08;\n  const innerSize = size - (borderWidth * 2);\n\n  const getBorderColor = () => {\n    if (border) {\n      switch (border.rarity) {\n        case 'common': return '#9CA3AF';\n        case 'rare': return '#3B82F6';\n        case 'epic': return '#8B5CF6';\n        case 'legendary': return '#F59E0B';\n        case 'exclusive': return '#EF4444';\n        default: return '#9CA3AF';\n      }\n    }\n    \n    switch (userType) {\n      case 'premium': return '#FFD700';\n      case 'official': return '#1DA1F2';\n      default: return '#E5E7EB';\n    }\n  };\n\n  return (\n    <View style={[\n      styles.avatarContainer,\n      {\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        borderWidth: borderWidth,\n        borderColor: getBorderColor(),\n      }\n    ]}>\n      <View style={[\n        styles.innerAvatar,\n        {\n          width: innerSize,\n          height: innerSize,\n          borderRadius: innerSize / 2,\n        }\n      ]}>\n        {imageUri ? (\n          <Image \n            source={{ uri: imageUri }} \n            style={[\n              styles.avatarImage,\n              {\n                width: innerSize,\n                height: innerSize,\n                borderRadius: innerSize / 2,\n              }\n            ]} \n          />\n        ) : (\n          <View style={[\n            styles.defaultAvatar,\n            {\n              width: innerSize,\n              height: innerSize,\n              borderRadius: innerSize / 2,\n            }\n          ]}>\n            <Text style={[styles.defaultAvatarText, { fontSize: innerSize * 0.4 }]}>ðŸ‘¤</Text>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\ninterface UserDisplayNameProps {\n  displayName: string;\n  badge?: UserBadge;\n  userType?: UserType;\n  isVerified?: boolean;\n  textStyle?: any;\n}\n\nexport const UserDisplayName: React.FC<UserDisplayNameProps> = ({ \n  displayName, \n  badge, \n  userType = 'normal',\n  isVerified = false,\n  textStyle \n}) => {\n  return (\n    <View style={styles.displayNameContainer}>\n      <Text style={[styles.displayName, textStyle]}>{displayName}</Text>\n      \n      {badge && (\n        <UserBadgeDisplay badge={badge} size=\"small\" />\n      )}\n      \n      {isVerified && userType === 'official' && (\n        <Text style={styles.verifiedIcon}>âœ…</Text>\n      )}\n      \n      {userType === 'premium' && (\n        <Text style={styles.vipIcon}>ðŸ‘‘</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 12,\n    marginLeft: 4,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n  },\n  badgeIcon: {\n    fontWeight: 'bold' as const,\n  },\n  badgeText: {\n    fontWeight: '600' as const,\n    marginLeft: 2,\n  },\n  avatarContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  innerAvatar: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F3F4F6',\n  },\n  avatarImage: {\n    resizeMode: 'cover' as const,\n  },\n  defaultAvatar: {\n    backgroundColor: '#E5E7EB',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  defaultAvatarText: {\n    color: '#9CA3AF',\n  },\n  displayNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  displayName: {\n    fontSize: 16,\n    fontWeight: '600' as const,\n    color: '#111827',\n  },\n  verifiedIcon: {\n    fontSize: 14,\n    marginLeft: 4,\n  },\n  vipIcon: {\n    fontSize: 14,\n    marginLeft: 4,\n  },\n});